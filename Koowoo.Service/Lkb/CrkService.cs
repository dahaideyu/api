//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码由 wsdl 自动生成, Version=4.6.1055.0。
// 
namespace Lkb
{
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="CrkServiceImplServiceSoapBinding", Namespace="http://service.crk.service.eastcompeace.com/")]
    public partial class CrkServiceImplService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback insertCrkOperationCompleted;
        
        private System.Threading.SendOrPostCallback insertSamOperationCompleted;
        
        private System.Threading.SendOrPostCallback insertCrkqxOperationCompleted;
        
        /// <remarks/>
        public CrkServiceImplService() {
            this.Url = "http://220.191.208.83:9603/fpps/crkService";
        }
        
        /// <remarks/>
        public event insertCrkCompletedEventHandler insertCrkCompleted;
        
        /// <remarks/>
        public event insertSamCompletedEventHandler insertSamCompleted;
        
        /// <remarks/>
        public event insertCrkqxCompletedEventHandler insertCrkqxCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.crk.service.eastcompeace.com/", ResponseNamespace="http://service.crk.service.eastcompeace.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string insertCrk([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0) {
            object[] results = this.Invoke("insertCrk", new object[] {
                        arg0});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegininsertCrk(string arg0, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("insertCrk", new object[] {
                        arg0}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndinsertCrk(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void insertCrkAsync(string arg0) {
            this.insertCrkAsync(arg0, null);
        }
        
        /// <remarks/>
        public void insertCrkAsync(string arg0, object userState) {
            if ((this.insertCrkOperationCompleted == null)) {
                this.insertCrkOperationCompleted = new System.Threading.SendOrPostCallback(this.OninsertCrkOperationCompleted);
            }
            this.InvokeAsync("insertCrk", new object[] {
                        arg0}, this.insertCrkOperationCompleted, userState);
        }
        
        private void OninsertCrkOperationCompleted(object arg) {
            if ((this.insertCrkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.insertCrkCompleted(this, new insertCrkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.crk.service.eastcompeace.com/", ResponseNamespace="http://service.crk.service.eastcompeace.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string insertSam([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0) {
            object[] results = this.Invoke("insertSam", new object[] {
                        arg0});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegininsertSam(string arg0, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("insertSam", new object[] {
                        arg0}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndinsertSam(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void insertSamAsync(string arg0) {
            this.insertSamAsync(arg0, null);
        }
        
        /// <remarks/>
        public void insertSamAsync(string arg0, object userState) {
            if ((this.insertSamOperationCompleted == null)) {
                this.insertSamOperationCompleted = new System.Threading.SendOrPostCallback(this.OninsertSamOperationCompleted);
            }
            this.InvokeAsync("insertSam", new object[] {
                        arg0}, this.insertSamOperationCompleted, userState);
        }
        
        private void OninsertSamOperationCompleted(object arg) {
            if ((this.insertSamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.insertSamCompleted(this, new insertSamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.crk.service.eastcompeace.com/", ResponseNamespace="http://service.crk.service.eastcompeace.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string insertCrkqx([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0) {
            object[] results = this.Invoke("insertCrkqx", new object[] {
                        arg0});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegininsertCrkqx(string arg0, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("insertCrkqx", new object[] {
                        arg0}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndinsertCrkqx(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void insertCrkqxAsync(string arg0) {
            this.insertCrkqxAsync(arg0, null);
        }
        
        /// <remarks/>
        public void insertCrkqxAsync(string arg0, object userState) {
            if ((this.insertCrkqxOperationCompleted == null)) {
                this.insertCrkqxOperationCompleted = new System.Threading.SendOrPostCallback(this.OninsertCrkqxOperationCompleted);
            }
            this.InvokeAsync("insertCrkqx", new object[] {
                        arg0}, this.insertCrkqxOperationCompleted, userState);
        }
        
        private void OninsertCrkqxOperationCompleted(object arg) {
            if ((this.insertCrkqxCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.insertCrkqxCompleted(this, new insertCrkqxCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void insertCrkCompletedEventHandler(object sender, insertCrkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class insertCrkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal insertCrkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void insertSamCompletedEventHandler(object sender, insertSamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class insertSamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal insertSamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void insertCrkqxCompletedEventHandler(object sender, insertCrkqxCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class insertCrkqxCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal insertCrkqxCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}
